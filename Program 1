#include <stdio.h>
#include <ctype.h>
#include <string.h>

#define MAX_TOKEN_LENGTH 100


int is_identifier(char *str) {
    if (!isalpha(str[0]) && str[0] != '_') 
        return 0;

    for (int i = 1; str[i] != '\0'; i++) {
        if (!isalnum(str[i]) && str[i] != '_') 
            return 0;
    }
    return 1;
}


int is_constant(char *str) {
    int dot_seen = 0;
    for (int i = 0; str[i] != '\0'; i++) {
        if (str[i] == '.') {
            if (dot_seen)  
                return 0;
            dot_seen = 1;
        }
        else if (!isdigit(str[i]))  
            return 0;
    }
    return 1;
}


int is_operator(char *str) {
    if (strlen(str) == 1) {
        char op = str[0];
        return (op == '+' || op == '-' || op == '*' || op == '/' || op == '=');
    }
    return 0;
}


void display_token_type(char *token) {
    if (is_identifier(token)) {
        printf("Identifier: %s\n", token);
    }
    else if (is_constant(token)) {
        printf("Constant: %s\n", token);
    }
    else if (is_operator(token)) {
        printf("Operator: %s\n", token);
    }
    else {
        printf("Invalid token: %s\n", token);
    }
}


int main() {
    char input[MAX_TOKEN_LENGTH];
    char token[MAX_TOKEN_LENGTH];
    int token_index = 0;

    printf("Enter the source code: ");
    fgets(input, sizeof(input), stdin);  

    
    for (int i = 0; input[i] != '\0'; i++) {
        char ch = input[i];

        
        if (isspace(ch)) {
            if (token_index > 0) {
                token[token_index] = '\0';  
                display_token_type(token);  
                token_index = 0;  
            }
        }
        
        else if (isalpha(ch) || ch == '_') {
            token[token_index++] = ch;
        }
       
        else if (isdigit(ch)) {
            token[token_index++] = ch;
        }
        
        else if (strchr("+-*/=", ch)) {
            if (token_index > 0) {
                token[token_index] = '\0';
                display_token_type(token);
                token_index = 0;
            }
            token[token_index++] = ch;
            token[token_index] = '\0';
            display_token_type(token);
            token_index = 0;
        }
        
        else {
            if (token_index > 0) {
                token[token_index] = '\0';
                display_token_type(token);
                token_index = 0;
            }
            printf("Invalid character: %c\n", ch);  
        }
    }

    
    if (token_index > 0) {
        token[token_index] = '\0';
        display_token_type(token);
    }

    return 0;
}
