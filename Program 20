#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX 100

char stack[MAX];
int top = -1;

void push(char c) {
    if (top < MAX - 1) {
        stack[++top] = c;
    }
}

char pop() {
    if (top >= 0) {
        return stack[top--];
    }
    return '\0';
}

int isEmpty() {
    return top == -1;
}

void trailingOperatorParser(char *input) {
    char *grammar[] = {"E->E+E", "E->E*E", "E->(E)", "E->id"};
    int i, j, k;
    char *token = strtok(input, " ");
    
    while (token != NULL) {
        push(token[0]);
        token = strtok(NULL, " ");
    }

    for (i = 0; i < MAX && !isEmpty(); i++) {
        char current = pop();
        for (j = 0; j < 4; j++) {
            if (current == grammar[j][2]) {
                printf("Reducing: %s\n", grammar[j]);
                break;
            }
        }
    }
}

int main() {
    char input[MAX];
    printf("Enter the input string: ");
    fgets(input, MAX, stdin);
    input[strcspn(input, "\n")] = 0; // Remove newline character
    trailingOperatorParser(input);
    return 0;
}
